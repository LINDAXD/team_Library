<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.library.mapper.review.ReviewBoardMapper">
	
	<!-- 본문 -->
	<select id="reviewContent" resultType="com.library.model.review.ReviewBoardDTO">
		select * from review where review_no = #{review_no}
	</select>
<<<<<<< HEAD
=======
	
	<!-- 조회수 -->
	<update id="updateView">
		update review 
		   set review_hits = (review_hits + 1) 
		where review_no  = #{review_no}
	</update>
>>>>>>> 409999c778d5b4b42c16ef162d890bb0cf9c2646


<!-- 등록 / 수정 / 삭제 -->	
	<!-- 게시물 등록 -->
	<insert id="reviewBoardInsert">
<<<<<<< HEAD
		insert into review(review_content, book_isbn, writer_id)
		values(#{review_content},#{book_isbn}, #{writer_id})
=======
		insert into review(review_content, writer_id, writer_name)
		values(#{review_content}, #{writer_id}, #{writer_name})
>>>>>>> 409999c778d5b4b42c16ef162d890bb0cf9c2646
	</insert>
	
	<!-- 게시글 수정 -->
	<update id="reviewBoardUpdate">
		update review 
		   set review_content = #{review_content}
		 where review_no = #{review_no}
	</update>
	
	<!-- 게시글 삭제 -->
	<delete id="reviewBoardDelete">
		delete from review where review_no = #{review_no}
	</delete>
	
	<select id="id_duplicate" resultType="String">
		select writer_id from review where review_no = #{review_no}
	</select>
	
	
<!-- 게시판(페이징) / 총 게시물 / 게시판 정렬 -->
<resultMap type="com.library.model.review.ReviewBoardDTO" id="reviewBoardMap">
	<!-- 기본키 -->
	<id property="reviewanswer_no" column="review_no"/>
	<result property="reviewanswer_no" column="review_no"/>
	<result property="review_content" column="review_content"/>
	<result property="writer_id" column="writer_id"/>
<<<<<<< HEAD
	<result property="book_isbn" column="book_isbn"/>
=======
	<result property="writer_name" column="writer_name"/>
>>>>>>> 409999c778d5b4b42c16ef162d890bb0cf9c2646
	<result property="review_reg_date" column="review_reg_date"/>
	
	<collection property="reviewanswerList" resultMap="reviewanswerList" />

</resultMap>

<resultMap type="com.library.model.review.ReviewAnswerBoardMapperDTO" id="reviewanswerList">
	<!-- 기본키 -->
	<id property="reviewanswer_no" column="reviewanswer_no"/>
	<result property="reviewanswer_no" column="reviewanswer_no"/>
	<result property="review_no" column="review_no"/>
	<result property="reviewanswer_content" column="reviewanswer_content"/>
	<result property="a_writer_id" column="a_writer_id"/>
<<<<<<< HEAD
=======
	<result property="a_writer_name" column="a_writer_name"/>
>>>>>>> 409999c778d5b4b42c16ef162d890bb0cf9c2646
	<result property="reviewanswer_reg_date" column="reviewanswer_reg_date"/>

</resultMap>

	<!-- 게시판 전체 조회 -->
<<<<<<< HEAD
	<!-- <select id="getListPage" resultMap="reviewBoardMap">
		select *
		  from review where book_isbn = #{book_isbn}
	</select> -->
	<select id="getListPage" resultType="int" parameterType="map">
		select count(*) from review
		where book_isbn = #{book_isbn}
=======
	<select id="getListPage" resultMap="reviewBoardMap">
		select *
		  from review as e left outer join reviewanswer as a  
			on e.review_no = a.review_no
			<include refid="criteria"></include>
		order by e.review_no desc limit #{skip}, #{amount}	
>>>>>>> 409999c778d5b4b42c16ef162d890bb0cf9c2646
	</select>
	
	<select id="getTotal" resultType="int">
		select count(*) from review <include refid="criteria"></include>
	</select>	
	
	<select id="reset" statementType="CALLABLE">
		call review_reset()
	</select>	
	
	<!-- 관리자 계정 확인 -->
	<select id="check_admin" resultType="int">
		select count(*) as count
		  from member_auth 
		 where user_id = #{user_id} and auth = 'ROLE_ADMIN'
	</select>
	
	
	<sql id="criteria">
		<if test="type != null">
			<if test="keyword != null">
			
				<if test="type == 'TC'">
					where review_content like concat('%', #{keyword}, '%')
				</if>
                 
				<if test="type == 'content'">
					where review_content like concat('%', #{keyword}, '%')
				</if>
                 
			</if>
		</if>
	</sql>
	



</mapper>