<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
	<mapper namespace="com.library.mapper.mylib.CartMapper">
		

		<!-- 대출 도서 건 수 -->
		<select id="get_cart_total" resultType="int">
			select count(*) 
			  from cart 
			 where user_id = #{user_id} <include refid="criteria"></include>
		</select>
		
		<!-- 대출 내역 페이징 및 검색 시 --> 
		
		<select id="findCartGoods" resultType="String" parameterType="com.library.model.mylib.CartDTO">
		select decode(count(*), 0, 'false', 'true') from cart
		where
		user_id = #{user_id} 
	</select>

		<insert id="addGoodsInCart">
		INSERT INTO cart (cartId, user_id) 
		VALUES (SELECT NVL2(MAX(cartId), MAX(cartId)+1, 1) FROM cart , #{user_id},)
		<selectKey keyProperty="cartId" resultType="integer" order="AFTER">
			SELECT MAX(cartId) FROM cartId
		</selectKey>
	</insert>


	
	<!-- 대출 중인 해당 도서 수 카운트 -->
	<select id="count" resultType="int">
		select count(*) from loan_history where book_isbn = #{book_isbn} and return_status = false
	</select>

	<!-- 대출 베스트 출력 -->
	<select id="book_rank" resultType="com.library.model.search.BookDTO">
		select count(*) as 'total_count', book_title, book_isbn, book_cover
					, book_pubDate, book_publisher, book_author
		 from loan_history 
		where loan_date between concat(#{year}, '-', #{month}, '-01') and concat(#{year}, '-', #{month}, '-31' )
			  and return_status = true 
		group by book_isbn 
		order by total_count desc 
		limit 10;
	</select>
	
	<!-- 대출자 상태 체크 -->
	<select id="statusCheck" resultType="int">
		select count(*)
		  from member 
		where user_id = #{user_id} and user_overdue_date = 0
		 and user_book_count &lt; (select user_able_loan from member where user_id = #{user_id})
	</select>
	
	<!-- 대출자 대출 중 도서 수 증가 -->
	<update id="increase_count">
		update member
		   set user_book_count = user_book_count + 1
		 where user_id = #{user_id};
	</update>
	
	<!-- 회원이 대출 중인 도서인지 체크 -->
	<select id="loan_check" resultType="int">
		select count(*)
		  from loan_history
		 where user_id = #{user_id} and book_isbn = #{book_isbn} and return_status = false 
	</select>
	
	<!-- 이미 찜한 도서인지 체크 -->
	<select id="like_check" resultType="int">
		select count(*)
		  from like_history
		 where user_id = #{user_id} and book_isbn = #{book_isbn} 
	</select>
	

	<insert id="cart">
		insert into like_history(user_id, user_email, book_title, book_author, book_isbn, 
		book_cover, book_pubDate, book_publisher)
		values
		(#{user_id}, #{user_email}, #{book_title}, #{book_author}, #{book_isbn}, #{book_cover}, 
		#{book_pubDate}, #{book_publisher})
	</insert>
	</mapper>